@model InsuranceClaim.Models.ClaimAdjustmentModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}


<div class="body-content-section">
    <div class="form-section-top">
        <div class="container">
            @{
                var menutab = Html.Partial("ClaimRegister");
            }
            @menutab
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 form-section-col">
                    <div class="form-group-section">
                        <div class="form-title">
                            <h4>Claim Adjustment</h4>
                        </div>
                        <div class="form-group-input">
                            @*@using (Ajax.BeginForm("SaveCustomerData", "CustomerRegistration", new AjaxOptions { UpdateTargetId = "CustomerResult", OnSuccess = "GoToProductDetail" }))*@
                            @using (Html.BeginForm("SaveClaimAdjustment", "ClaimAdjustment", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.HiddenFor(x => x.Id)
                                @Html.HiddenFor(x => x.PolicyNumber)
                                @Html.HiddenFor(x => x.ClaimNumber)
                                @Html.HiddenFor(x => x.TotalSuminsure)

                                <div class="row">

                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <label>Policy Number</label>:
                                            <label>@Model.PolicyNumber</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <label>Claim Number</label>:
                                            <label>@Model.ClaimNumber</label>
                                        </div>
                                    </div>

                                </div>


                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        @*<div class="form-group">
                                                <div class="form-group">
                                                    <label>Sum Insured: </label>
                                                    <label id="suminsure">@Model.TotalSuminsure </label>
                                                </div>
                                            </div>*@
                                        <div class="form-group">
                                            <label class="radio-label">Sound System ?</label>
                                            <div class="form-group-radio">
                                                <label>@Html.RadioButtonFor(x => x.SoundSystem, true)Yes</label>
                                                <label>@Html.RadioButtonFor(x => x.SoundSystem, false)No</label>
                                                @Html.ValidationMessageFor(x => x.SoundSystem, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6 form-group-text">
                                        <div class="form-group">
                                            <label class="radio-label">Driver licensed  for less then 60 months ?</label>
                                            <div class="form-group-radio">
                                                <label>@Html.RadioButtonFor(x => x.Islicensedless60months, true)Yes</label>
                                                <label>@Html.RadioButtonFor(x => x.Islicensedless60months, false)No</label>
                                                @Html.ValidationMessageFor(x => x.Islicensedless60months, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                <label class="radio-label">Is stolen (Y/N)</label>
                                                <label>@Html.RadioButtonFor(x => x.IsStolen, true)Yes</label>
                                                <label>@Html.RadioButtonFor(x => x.IsStolen, false)No</label>
                                                @Html.ValidationMessageFor(x => x.IsStolen, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="col-sm-6 form-group-text">
                                            <div class="form-group">
                                                <label class="radio-label">Loss is in Zimbabwe (Y/N)</label>
                                                <div class="form-group-radio">
                                                    <label>@Html.RadioButtonFor(x => x.IsLossInZimbabwe, true)Yes</label>
                                                    <label>@Html.RadioButtonFor(x => x.IsLossInZimbabwe, false)No</label>
                                                    @Html.ValidationMessageFor(x => x.IsLossInZimbabwe, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                <label class="radio-label">Partial Loss ?</label>
                                                <div class="form-group-radio">
                                                    <label>@Html.RadioButtonFor(x => x.IsPartialLoss, true)Yes</label>
                                                    <label>@Html.RadioButtonFor(x => x.IsPartialLoss, false)No</label>
                                                    @Html.ValidationMessageFor(x => x.IsPartialLoss, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            @*<div class="form-group">
                                                    <label class="radio-label">Sound System ?</label>
                                                    <div class="form-group-radio">
                                                        <label>@Html.RadioButtonFor(x => x.SoundSystem, true)Yes</label>
                                                        <label>@Html.RadioButtonFor(x => x.SoundSystem, false)No</label>
                                                        @Html.ValidationMessageFor(x => x.SoundSystem, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group no-margin">
                                                @Html.Label("Is Private Car", new { @class = "gender-label-nowidth" })
                                                @Html.CheckBoxFor(x => x.PrivateCar)
                                                @Html.ValidationMessageFor(x => x.PrivateCar, "", new { @class = "text-danger" })
                                                <span id="spnprivatecar"></span>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 form-group-text">
                                            <div class="form-group no-margin" id="Under21driver">
                                                <label class="radio-label">Driver is under 21 or not ?(Y/N)</label>
                                                <div class="form-group-radio" id="Driver21">
                                                    <label>@Html.RadioButtonFor(x => x.DriverIsUnder21, true)Yes</label>
                                                    <label>@Html.RadioButtonFor(x => x.DriverIsUnder21, false)No</label>
                                                    @Html.ValidationMessageFor(x => x.DriverIsUnder21, "", new { @class = "text-danger valMessages" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">

                                            <div class="form-group">
                                                @Html.Label("Is Commerical Car", new { @class = "gender-label-nowidth" })
                                                @Html.CheckBoxFor(x => x.CommericalCar)
                                                @Html.ValidationMessageFor(x => x.CommericalCar, "", new { @class = "text-danger " })
                                                <span id="spncommercialcar"></span>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 form-group-text">
                                            <div class="form-group" id="Under25driver">
                                                <label class="radio-label">Is Driver Under25 ?(Y/N)</label>
                                                <div class="form-group-radio" id="radiotest">
                                                    <label>@Html.RadioButtonFor(x => x.IsDriverUnder25, true)Yes</label>
                                                    <label>@Html.RadioButtonFor(x => x.IsDriverUnder25, false)No</label>
                                                    @Html.ValidationMessageFor(x => x.IsDriverUnder25, "", new { @class = "text-danger valMessage" })
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.AmountToPay, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.AmountToPay, new { @class = "form-control", @name = "AmountToPay", @autocomplete = "off", @id = "AmountToPay", @placeholder = "Enter Amount" })
                                                @Html.ValidationMessageFor(x => x.AmountToPay, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.EstimatedLoss, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.EstimatedLoss, new { @class = "form-control", @name = "EstimatedLoss", @autocomplete = "off", @id = "EstimatedLoss", @placeholder = "Enter Estimated Loss Amount" })
                                                @Html.ValidationMessageFor(x => x.EstimatedLoss, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 form-group-text">
                                            <div class="form-group">

                                                @Html.LabelFor(x => x.FirstName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @name = "FirstName", @autocomplete = "off", @id = "FirstName", @placeholder = "Enter First Name" })
                                                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.LastName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @name = "LastName", @autocomplete = "off", @id = "LastName", @placeholder = "Enter Last Name" })
                                                @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.ExcessesAmount, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.ExcessesAmount, new { @class = "form-control", @name = "ExcessesAmount", @autocomplete = "off", @id = "ExcessesAmount", @placeholder = "Enter Excesses Amount", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(x => x.ExcessesAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.TotalSuminsure, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.TotalSuminsure, new { @class = "form-control", @name = "TotalSuminsure", @autocomplete = "off", @id = "suminsure", @placeholder = "Enter SumInsured", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(x => x.TotalSuminsure, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.PolicyholderName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.PolicyholderName, new { @class = "form-control", @name = "PolicyholderName", @autocomplete = "off", @id = "PolicyholderName", @placeholder = "Enter Policy Holder Name" })
                                                @Html.ValidationMessageFor(x => x.PolicyholderName, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-sm-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.PayeeName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.PayeeName, new { @class = "form-control", @name = "PayeeName", @autocomplete = "off", @id = "PayeeName", @placeholder = "Enter Payee Name" })
                                                @Html.ValidationMessageFor(x => x.PayeeName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.PayeeBankDetails, new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.PayeeBankDetails, ViewBag.ePaymentDetailData as SelectList, "Select Payment Type", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.PayeeBankDetails, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text " id="test" style="display:none">
                                            <div class="form-group">
                                                <div class="number-block">
                                                    @Html.LabelFor(x => x.PhoneNumber, new { @class = "gender-label" })
                                                    <small> In The Format: 0123456789</small>
                                                    @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control", @name = "PhoneNumber", @autocomplete = "off", @id = "PhoneNumber", @placeholder = "Enter Phone Number" })
                                                    @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <br />
                                    <div class="col-md-12 next-btn">
                                        <div class="row">
                                            <div class="col-sm-6 col-md-6">
                                                <div class="text-left">
                                                    <button type="button" class="btn" onclick="window.location.href='@Url.Action("ClaimRegistrationList","Claimant")'">Cancel</button>
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-6">
                                                <div class="text-right">
                                                    <button type="submit" class="btn" onclick="return ValidateCheckBox()">Add</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>



    var SetAccess = {
        isdriver: "",
        IsStolen: "",
        Ispartial: "",
        IslossInZim: "",
        IsLicence: "",
        isprivate: "",
        isprivatecar: "",
        commericalCar: "",
        isSoundSystem: "",
        isDriverunder25: ""
    }

    function ValidateCheckBox() {
        debugger;
        if ($("#PrivateCar").prop('checked') == true || $("#CommericalCar").prop('checked') == true) {
        }
        else if ($("#PrivateCar").prop('checked') == false && $("#CommericalCar").prop('checked') == false) {
            $("#spnprivatecar").text("This is Required Field").css("color", "#a94442");
            $("#spncommercialcar").text("This is Required Field").css("color", "#a94442");
            return false;
        }

        //if ($("#PrivateCar").prop('checked') == false) {
        //    $("#spnprivatecar").text("This is Required Field").css("color", "#a94442");
        //}
        //else if ($("#PrivateCar").prop('checked') == true) {
        //    $("#spncommercialcar").hide();
        //}

        //if ($("#CommericalCar").prop('checked') == false) {
        //    $("#spncommercialcar").text("This is Required Field").css("color", "#a94442");

        //}
        //else if ($("#CommericalCar").prop('checked') == true) {
        //    $("#spnprivatecar").hide();
        //}
    }


    $(document).ready(function () {

        $("#PayeeBankDetails").change(function () {
            debugger;
            var getddlvalue = $('#PayeeBankDetails option:selected').val();
            if (getddlvalue == "2") {
                $("#test").show();
            }
            else {
                $("#test").hide();
            }
        })

        //$("#radiotest").addClass("btnDisabled").attr("style", "background-color: #e1e1e1 !important");
        //$("#Driver21").addClass("btnDisabled").attr("style", "background-color: #e1e1e1 !important");
        $("#Under25driver").hide();
        $("#Under21driver").hide();
    });

    $("#PrivateCar").change(
        function () {
            debugger;
            if ($(this).is(':checked') && $(this).val() == "true") {
                $("fieldset").removeAttr("disabled");
                $("#CommericalCar").attr('checked', false);
                $("#spnprivatecar").hide();
                $("#spncommercialcar").hide();
                //$("#Driver21").removeClass("btnDisabled").attr("style", "background-color: #e1e1e1 !important");
                $('input:radio[name = "IsDriverUnder25"]').attr('checked', false)
                $("#Under25driver").hide();
                $("#Under21driver").show();
                SetAccess.isDriverunder25 = null;
                if (SetAccess.isDriverunder25 == null) {
                    $(IsDriverUnder25).rules('remove', 'required')
                }
                else {

                    $(".valMessage").text('This is required field');

                }
                //$("#radiotest").addClass("btnDisabled").attr("style", "background-color: #e1e1e1 !important");
                //SetAccess.isprivatecar = true;
                //SetAccess.commericalCar = false;
                Save();
            }
            else {
                $("#Under21driver").hide();
            }

        });
    $("#CommericalCar").change(
        function () {
            debugger;
            if ($(this).is(':checked') && $(this).val() == "true") {
                $("fieldset").removeAttr("disabled");
                //$("#radiotest").removeClass("btnDisabled").attr("style", "background-color: #e1e1e1 !important");
                $("#PrivateCar").attr('checked', false);
                $('input:radio[name = "DriverIsUnder21"]').attr('checked', false)
                $("#Under21driver").hide();
                $("#Under25driver").show();
                $("#spnprivatecar").hide();
                $("#spncommercialcar").hide();
                SetAccess.isdriver = null;
                if (SetAccess.isdriver == null) {
                    //$(".valMessages").text('');

                    $(DriverIsUnder21).rules('remove', 'required')

                }
                else {

                    $(".valMessage").text('This is required field');

                }
                //$("#Driver21").addClass("btnDisabled").attr("style", "background-color: #e1e1e1 !important");
                //SetAccess.commericalCar = true;
                //SetAccess.isprivatecar = false;
                Save();
            }
            else {
                $("#Under25driver").hide();
            }
        })


    $('input:radio[name = "SoundSystem"]').change(

        function () {
            debugger;
            if ($(this).is(':checked') && $(this).val() == "True") {
                debugger;
                SetAccess.isSoundSystem = 1;
                Save();
            }
            else {
                SetAccess.isSoundSystem = 0;
                Save();
            }
        });
    $('input:radio[name = "IsDriverUnder25"]').change(
        function () {
            debugger;
            if ($(this).is(':checked') && $(this).val() == "True") {
                debugger;
                SetAccess.isDriverunder25 = 1;
                Save();
            }
            else {
                SetAccess.isDriverunder25 = 0;
                Save();
            }
        });

    $('input:radio[name="DriverIsUnder21"]').change(
     function () {
         debugger;

         if ($(this).is(':checked') && $(this).val() == "True") {
             debugger;

             SetAccess.isdriver = 1;
             debugger;
             Save();
         }

         else {
             SetAccess.isdriver = 0;
             debugger;
             Save();

         }
     });

    $('input:radio[name="Islicensedless60months"]').change(
    function () {
        debugger;

        if ($(this).is(':checked') && $(this).val() == "True") {
            debugger;
            SetAccess.IsLicence = 1;
            debugger;
            Save();
        }

        else {
            SetAccess.IsLicence = 0;
            debugger;
            Save();

        }
    });


    $('input:radio[name="IsStolen"]').change(
   function () {
       debugger;

       if ($(this).is(':checked') && $(this).val() == "True") {
           debugger;
           SetAccess.IsStolen = 1;
           debugger;
           Save();
       }

       else {
           SetAccess.IsStolen = 0;
           debugger;
           Save();

       }
   });

    $('input:radio[name="IsLossInZimbabwe"]').change(
     function () {
         debugger;

         if ($(this).is(':checked') && $(this).val() == "True") {
             debugger;
             SetAccess.IslossInZim = 1;
             Save();
         }

         else {
             SetAccess.IslossInZim = 0;
             debugger;
             Save();

         }
     });

    $('input:radio[name="IsPartialLoss"]').change(
    function () {
        debugger;

        if ($(this).is(':checked') && $(this).val() == "True") {
            debugger;
            SetAccess.Ispartial = 1;
            Save();
        }

        else {
            SetAccess.Ispartial = 0;
            debugger;
            Save();

        }
    });

    function Save() {
        debugger;

        var DriverIsUnder21 = "";
        var IsPartialLoss = "";
        var privatecar = "";
        IsLossInZimbabwe = "";
        IsStolen = "";
        Islicensedless60months = "";
        IsSoundSystem = SetAccess.isSoundSystem;
        IsDriver25 = SetAccess.isDriverunder25;
        //privatecar = SetAccess.isprivatecar;
        privatecar = $("#PrivateCar").is(":checked");
        CCommericalCar = $("#CommericalCar").is(":checked");

        sumInsured = parseFloat($("#suminsure").val());

        var insurevalue = {
            DriverIsUnder21: SetAccess.isdriver,
            IsPartialLoss: SetAccess.Ispartial,
            IsLossInZimbabwe: SetAccess.IslossInZim,
            Islicensedless60months: SetAccess.IsLicence,
            IsStolen: SetAccess.IsStolen,
            sumInsured: sumInsured,
            PrivateCar: privatecar,
            CommercialCar: CCommericalCar,
            IsSoundSystem: IsSoundSystem,
            IsDriver25: IsDriver25,

        }


        debugger;
        $.ajax({
            url: "@Url.Action("CalculateClaimPremium", "ClaimAdjustment")",
            type: "post",
            dataType: "json",
            data: insurevalue,
            success: function (data) {
                debugger;

                $("#ExcessesAmount").val((data.ExcessesAmount))
            }
        });
    }


</script>