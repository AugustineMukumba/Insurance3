@model InsuranceClaim.Models.GrossWrittenPremiumReportSearchModels
@{
    ViewBag.Title = "GrossWrittenPremiumReport";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}

<div class="productsave-section GrossWrittenPremiumReport">

    <div class="container-fluid" id="content">
        <div class="row">
            <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 products-top">
                <div class="head-title">
                    <h2>Gross Written Premium Report</h2>
                </div>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 add-btn">
                <div class="text-right">
                    @*<button type="button" class="btn btn-primary">Add</button>*@
                    @*<input class="btn btn-primary" type="button" value="Generate PDF" id="generatePdf" />*@
                    <input class="btn btn-primary" type="button" value="Generate Excel" id="generateExcel" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 add-btn">
                @*<input type="text" id="txtdate" placeholder="Enter date" class="form-control" />*@
            </div>
            @*<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 add-btn">
                    <button type="button" class="btn btn-primary pull-right" onclick="searchBydate()">Search</button>

                </div>*@
        </div>

        @using (Html.BeginForm("SearchGrossReports", "Report", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="container-main">
                <div class="form-group-section-date">
                    <div class="form-group-input">
                        <div class="row">
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.FromDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew'>
                                        @Html.TextBoxFor(m => m.FormDate, new { @class = "form-control", @placeholder = "Start Date" })
                                        @Html.ValidationMessageFor(m => m.FormDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.EndDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew12'>
                                        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "End Date" })
                                        @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6 form-group-btn">
                                <div class="form-group">
                                    <ul class="list-inline">
                                        <li><button type="submit" class="btn btn-success">Search</button></li>
                                        <li><button type="button" onclick="removeSearchBox();" class="btn btn-danger">Clear Search</button></li>
                                    </ul>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }


        <div class="product-table-grid">
            <div class="table-responsive">
                <table width="1785" class="table table-striped tablesorter" style="width:1785px" id="report2excel">
                    <thead>
                        <tr>
                            <th style="width: 170px;">User/Call center agent</th>
                            <th style="width: 170px;">Customer Name</th>
                            <th style="width: 180px;">Policy Number</th>
                            <th style="width:170px;">Policy Dates</th>
                            <th style="width:170px;">Payment Detail</th>
                            <th>Term Period</th>
                            <th>Cover Type</th>
                            <th>Currency</th>

                            <th style="width:170px;">Premium</th>

                            <th width="170px;">Stamp Duty</th>
                            <th>ZTSC Levy</th>
                            <th>Commission Detail</th>
                            <th>Radio Licence Cost</th>
                            <th>Zinara License Fee</th>
                            <th>Status</th>
                            <th>Policy Status</th>

                        </tr>
                    </thead>
                    <tbody>

                        @{
                            decimal sumInsuredTotal = 0;
                            decimal annualPremiumTotal = 0;
                            decimal premiumDueTotal = 0;
                            decimal netPremiumTotal = 0;
                            decimal stampdutyTotal = 0;
                            decimal ztscLevyTotal = 0;
                            decimal commissionAmountTotal = 0;
                            decimal radioLicenseCostTotal = 0;
                            decimal ZinaraLicenseFee = 0;
                        }

                        @foreach (var item in Model.ListGrossWrittenPremiumReportdata.ToList())
                        {
                            sumInsuredTotal += item.Sum_Insured;
                            annualPremiumTotal += item.Annual_Premium;
                            premiumDueTotal += item.Premium_due;
                            netPremiumTotal += Convert.ToDecimal(item.Net_Premium);
                            stampdutyTotal += item.Stamp_duty;
                            ztscLevyTotal += item.ZTSC_Levy;
                            commissionAmountTotal += item.Comission_Amount;
                            radioLicenseCostTotal += Convert.ToDecimal(item.RadioLicenseCost);
                            ZinaraLicenseFee += Convert.ToDecimal(item.Zinara_License_Fee);
                            <tr>
                                <td>@item.PolicyCreatedBy</td>
                                <td>@item.Customer_Name</td>
                                <td>@item.Policy_Number</td>
                                <td>
                                    @item.Transaction_date
                                </td>
                                <td>
                                    @item.Payment_Mode
                                </td>
                                <td> @item.Payment_Term</td>
                             
                                <td>@item.CoverType</td>
                                <td> @item.Currency </td>
                                <td>
                                    @item.Premium_due
                                </td>

                                <td> @item.Stamp_duty</td>
                                <td> @item.ZTSC_Levy</td>
                                <td>
                                    @item.Comission_Amount
                                </td>
                                <td>@item.RadioLicenseCost</td>
                                <td> @item.Zinara_License_Fee </td>


                                @if (DateTime.Now > item.PolicyRenewalDate)
                                {
                                    if (Convert.ToBoolean(item.IsLapsed) && item.IsActive == false)
                                    {
                                        <td>Renewed</td>
                                    }
                                    else
                                    {
                                        <td>Lapsed</td>
                                    }
                                }
                                else if (Convert.ToBoolean(!item.IsActive))
                                {
                                    <td>Disabled</td>
                                }
                                else if (DateTime.Now < item.PolicyRenewalDate && Convert.ToBoolean(item.IsActive))
                                {
                                    <td>In Force</td>
                                }


                                @if (Convert.ToBoolean(item.IsLapsed) && item.IsActive == false)
                                {
                                    <td>Renewals</td>
                                }
                                else
                                {
                                    <td>New Business</td>
                                }


                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td><strong>Total:</strong></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>
                                <b> @premiumDueTotal </b>
                            </td>
                            <td><strong>@stampdutyTotal</strong></td>
                            <td><strong>@ztscLevyTotal</strong></td>
                            <td>
                                <strong>@commissionAmountTotal</strong>
                            </td>
                            <td><strong>@radioLicenseCostTotal</strong></td>
                            <td><strong> @ZinaraLicenseFee </strong> </td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {

        $(".tablesorter").tablesorter({

            headers: {

                2: {
                    sorter: false
                },
                4: {
                    sorter: false
                },

                6: {
                    sorter: false
                },
                9: {
                    sorter: false
                },

            }




        });


        $("#datetimenew").datetimepicker({
            format: 'MM/D/YYYY'
        });
        $("#datetimenew12").datetimepicker({
            format: 'MM/D/YYYY'

        });


    });


    function removeSearchBox() {
        window.location.href = "/Report/GrossWrittenPremiumReport";
    }

    $("#generateExcel").click(function () {
        debugger;
        $("#report2excel").table2excel({
            // exclude CSS class
            exclude: ".noExl",
            name: "Worksheet Name",
            filename: "GrossWrittenPremiumReport" //do not include extension

        });
    });

    var doc = new jsPDF({ format: [600, 600] });
    var specialElementHandlers = {
        '#editor': function (element, renderer) {
            return true;
        }
    };

    $('#generatePdf').click(function () {

        doc.fromHTML($('#content').html(), 15, 15, {
            'width': 500,
            'elementHandlers': specialElementHandlers
        });
        doc.save('GrossWrittenPremiumReport.pdf');

    });




</script>